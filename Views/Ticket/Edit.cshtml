@using Microsoft.AspNetCore.Identity;

@model Ticket 

@inject UserManager<IdentityUser> UserManager

<form method="post" asp-action="Edit">
	<div class="border p-3 mt-4">
		<div class="row pb-2">
			<h2 class="text-primary">Edit Ticket</h2>
			<hr />
		</div>
@* 		<div asp-validation-summary="All"></div> *@
		<div class="mb-3 row">
			<div class="col-6">
				Ticket #: @Model.ID
			</div>
			<div class="col-3">
				@* How do I access the username here? *@
				Username: @GetUserName(Model.OwnerID)					
			</div>
			<div class="col-3">
				Created: @Model.CreationTime
			</div>
		</div>
		<div class="mb-3">
			<label asp-for="TicketSubject"></label>
			@if(User.IsInRole("admin"))
			{
					<input asp-for="TicketSubject" class="form-control" style="background-color: #f8f9fa; color: #6c757d; cursor: not-allowed;" readonly/>	
			}
			@if (User.IsInRole("dev"))
			{
					<input asp-for="TicketSubject" class="form-control" />	
			}
			<span asp-validation-for="TicketSubject" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="TicketContent"></label>
			@if (User.IsInRole("admin"))
			{
						<input asp-for="TicketContent" class="form-control" style="background-color: #f8f9fa; color: #6c757d; cursor: not-allowed;" readonly/>	
			}
			@if (User.IsInRole("dev"))
			{
						<input asp-for="TicketContent" class="form-control" />	
			}
			<span asp-validation-for="TicketContent" class="text-danger"></span>
		
		<div>
			<label class="from-label p-3"> Status </label>
			@Html.DropDownList("Status",
			Html.GetEnumSelectList<ProblemStatus>(),
			"Select status",
			new {@class ="form-control"})
			</br>
			<button type="submit" class="btn btn-primary" style="width:150px">Update</button>
			<a asp-controller="Ticket" asp-action="Index" class="btn btn-secondary" style="width:150px">
			Back to List
			</a>
		</div>
	</div>
</form>

@functions {
	string GetUserName(string userId)
	{
		var user = UserManager.FindByIdAsync(userId).Result;
		return user?.UserName;
	}
}